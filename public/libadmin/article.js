// Generated by CoffeeScript 1.8.0
(function() {
  var Article, Tag;

  Article = (function() {
    function Article() {}

    Article.list = function(token, callback, sort, pageIndex, pageCount) {
      if (sort == null) {
        sort = '';
      }
      if (pageIndex == null) {
        pageIndex = 0;
      }
      if (pageCount == null) {
        pageCount = 50;
      }
      return Util._get(Util.host + "/admin/article/list", {
        sort: sort,
        page_index: pageIndex,
        page_count: pageCount,
        access_token: token
      }, (function(_this) {
        return function(resp) {
          var articles, info, _i, _len, _ref;
          if (Error._hasError(resp)) {
            return callback(new Error(resp.error_id, resp.error_desc));
          } else {
            articles = [];
            _ref = resp.articles;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              info = _ref[_i];
              articles.push(new Article()._update(info));
            }
            return callback(articles, resp.page_index, resp.page_total, resp.total_number);
          }
        };
      })(this));
    };

    Article.lists = function(token, sort, pageIndex, pageCount) {
      if (sort == null) {
        sort = '';
      }
      if (pageIndex == null) {
        pageIndex = 0;
      }
      if (pageCount == null) {
        pageCount = 50;
      }
      return $http.get(Util.host + '/admin/article/list', {
        params: {
          sort: sort,
          page_index: pageIndex,
          page_count: pageCount,
          access_token: token
        }
      }).then((function(_this) {
        return function(response) {
          if (typeof response.data === 'object') {
            return response.data;
          } else {
            return $q.reject(response.data);
          }
        };
      })(this), function(response) {
        return $q.reject(response.data);
      });
    };

    Article.timeline = function(userid, token, callback, pageIndex, pageCount) {
      if (pageIndex == null) {
        pageIndex = 0;
      }
      if (pageCount == null) {
        pageCount = 50;
      }
      return Util._get(Util.host + "/admin/article/timeline", {
        userid: userid,
        page_index: pageIndex,
        page_count: pageCount,
        access_token: token
      }, (function(_this) {
        return function(resp) {
          var articles, info, _i, _len, _ref;
          if (Error._hasError(resp)) {
            return callback(new Error(resp.error_id, resp.error_desc));
          } else {
            articles = [];
            _ref = resp.articles;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              info = _ref[_i];
              articles.push(new Article()._update(info));
            }
            return callback(articles, resp.page_index, resp.page_total, resp.total_number);
          }
        };
      })(this));
    };

    Article.search = function(token, keyword, callback, sort, pageIndex, pageCount) {
      if (sort == null) {
        sort = '';
      }
      if (pageIndex == null) {
        pageIndex = 0;
      }
      if (pageCount == null) {
        pageCount = 50;
      }
      return Util._get(Util.host + "/admin/article/search", {
        keyword: keyword,
        sort: sort,
        page_index: pageIndex,
        page_count: pageCount,
        access_token: token
      }, (function(_this) {
        return function(resp) {
          var articles, info, _i, _len, _ref;
          if (Error._hasError(resp)) {
            return callback(new Error(resp.error_id, resp.error_desc));
          } else {
            articles = [];
            _ref = resp.articles;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              info = _ref[_i];
              articles.push(new Article()._update(info));
            }
            return callback(articles, resp.page_index, resp.page_total, resp.total_number);
          }
        };
      })(this));
    };

    Article.prototype.getInfo = function(article_id, token, callback) {
      return Util._get(Util.host + "/admin/article/info", {
        article_id: article_id,
        access_token: token
      }, (function(_this) {
        return function(resp) {
          if (Error._hasError(resp)) {
            return callback(new Error(resp.error_id, resp.error_desc));
          } else {
            return callback(_this._update(resp));
          }
        };
      })(this));
    };

    Article.prototype.post = function(token, callback) {
      return Util._post(Util.host + "/admin/article/post", {
        article_id: this.article_id,
        author: this.author,
        contents: this.contents,
        tags: [],
        access_token: token
      }, (function(_this) {
        return function(resp) {
          if (Error._hasError(resp)) {
            return callback(new Error(resp.error_id, resp.error_desc));
          } else {
            return callback(resp);
          }
        };
      })(this));
    };

    Article.prototype["delete"] = function(token, callback) {
      return Util._post(Util.host + "/admin/article/delete", {
        article_id: this.article_id,
        access_token: token
      }, function(resp) {
        if (Error._hasError(resp)) {
          return callback(new Error(resp.error_id, resp.error_desc));
        } else {
          return callback(resp);
        }
      });
    };

    Article.prototype._update = function(data) {
      var tag, _i, _len, _ref;
      this.article_id = data.article_id;
      this.parent = data.parent;
      if ((data.author != null) && (data.author.userid != null)) {
        this.author = new User(data.author.userid)._update(data.author);
      }
      this.cover_image = data.cover_image;
      this.cover_text = data.cover_text;
      if (data.cover_text === '') {
        this.cover_text = '无标题文章';
      }
      this.time = Util._formatDate(new Date(data.time * 1000));
      this.thumbs_count = data.thumbs_count;
      this.comments_count = data.comments_count;
      this.rewards_value = data.rewards_value / 100000000;
      this.rewards_users = [];
      if (data.rewards_users !== null) {
        this.rewards_users = data.rewards_users;
      }
      this.tags = [];
      if (data.tags != null) {
        _ref = data.tags;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tag = _ref[_i];
          switch (tag) {
            case 'SPORT_LOG':
              this.tags.push(new Tag(tag, '运动日志'));
              break;
            case 'SPORT_THEORY':
              this.tags.push(new Tag(tag, '跑步圣经'));
              break;
            case 'EQUIP_BLOG':
              this.tags.push(new Tag(tag, '我爱装备'));
              break;
            case 'SPORT_LIFE':
              this.tags.push(new Tag(tag, '运动生活'));
              break;
            case 'PRODUCT_PROPOSAL':
              this.tags.push(new Tag(tag, '产品建议'));
          }
        }
      }
      if (this.tags.length === 0) {
        this.tags.push(new Tag('SPORT_LOG', '运动日志'));
      }
      this.contents = data.contents;
      this._comments(data.comments);
      return this;
    };

    Article.prototype._comments = function(data) {
      var a, art, _i, _len, _results;
      this.comments = [];
      if (data !== null) {
        _results = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          a = data[_i];
          art = new Article()._update(a);
          art._comments(a.comments);
          _results.push(this.comments.push(art));
        }
        return _results;
      }
    };

    return Article;

  })();

  Tag = (function() {
    function Tag(id, name) {
      this.id = id;
      this.name = name;
    }

    return Tag;

  })();

}).call(this);

//# sourceMappingURL=article.js.map
